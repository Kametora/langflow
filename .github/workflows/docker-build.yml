name: Docker Build and Push
run-name: Docker Build and Push

on:
  workflow_call:

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Debug Token
        run: |
          if [ -n "${{ secrets.GH_PAT }}" ]; then
            echo "Token is set."
          else
            echo "Token is not set."
          fi

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.5
        with:
          github_token: ${{ secrets.GH_PAT }}
          custom_release_rules: feat:patch:Features,chore:patch:Chores,fix:patch:Bug Fixes

    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}

  build:
    needs: [tag]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0  # Needed to fetch tags

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            **/__pycache__
            **/*.pyc
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            ${{ runner.os }}-buildx-

      - name: Google Auth with Service Account Key
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GACTION_GOOGLE_CREDENTIALS }}
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
          token_format: "access_token"
          access_token_lifetime: "3600s"
          create_credentials_file: true
          export_environment_variables: true

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}

      - name: Configure Docker credentials
        run: |
          echo ${{ steps.auth.outputs.access_token }} | docker login -u oauth2accesstoken --password-stdin https://gcr.io
          gcloud auth configure-docker gcr.io --quiet
          gcloud components install gke-gcloud-auth-plugin

      - name: Build and Push to Our Registry
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: ./docker/build_and_push.Dockerfile
          tags: |
            gcr.io/${{ secrets.GOOGLE_PROJECT_ID }}/langflow:${{ needs.tag.outputs.new_tag }}
            gcr.io/${{ secrets.GOOGLE_PROJECT_ID }}/langflow:latest
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  build-frontend:
    needs: [tag]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'src/frontend/package-lock.json'

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: |
            src/frontend/node_modules
            src/frontend/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('src/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            ${{ runner.os }}-buildx-

      - name: Google Auth with Service Account Key
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GACTION_GOOGLE_CREDENTIALS }}
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
          token_format: "access_token"
          access_token_lifetime: "3600s"
          create_credentials_file: true
          export_environment_variables: true

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}

      - name: Configure Docker credentials
        run: |
          echo ${{ steps.auth.outputs.access_token }} | docker login -u oauth2accesstoken --password-stdin https://gcr.io
          gcloud auth configure-docker gcr.io --quiet
          gcloud components install gke-gcloud-auth-plugin

      - name: Build and Push to Our Registry
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: ./docker/frontend/build_and_push_frontend.Dockerfile
          tags: |
            gcr.io/${{ secrets.GOOGLE_PROJECT_ID }}/langflow-frontend:${{ needs.tag.outputs.new_tag }}
            gcr.io/${{ secrets.GOOGLE_PROJECT_ID }}/langflow-frontend:latest
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

