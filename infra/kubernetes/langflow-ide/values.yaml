imagePullSecrets: []

nameOverride: "langflow-service"
# Override for the name of the helm deployment
# Note: using `langflow` as service name causes
# env var collision when deploying on openshift
# https://github.com/langflow-ai/langflow/issues/4330#issuecomment-2459097917
fullnameOverride: "langflow-service"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the
  # fullname template
  name: ""

ingress:
  enabled: false

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000
  allowPrivilegeEscalation: false
  runAsGroup: 1000

podSecurityContext:
  fsGroup: 1000
  runAsUser: 1000
  runAsNonRoot: true
  runAsGroup: 1000


langflow:
  global:
    image:
      tag: "latest"
  backend:
    replicaCount: 1
    service:
      type: ClusterIP
      port: 7860
    backendOnly: true
    numWorkers: 1
    image:
      repository: gcr.io/arno-377423/langflow
      imagePullPolicy: IfNotPresent
      tag: latest
    command:
      - python
      - -m
      - langflow
      - run
      - --host
      - 0.0.0.0
      - --backend-only
    resources:
      requests:
        cpu: 0.5
        memory: 1Gi
      # limits:
      #   cpu: 0.5
      #   memory: 1Gi
    probe:
      failureThreshold: 10
      periodSeconds: 30
      timeoutSeconds: 10
      initialDelaySeconds: 120
    env:
      - name: LANGFLOW_PORT
        value: "7860"
      - name: LANGFLOW_LOG_LEVEL
        value: "DEBUG"
      - name: LANGFLOW_ALEMBIC_LOG_FILE
        value: "/tmp/alembic.log"
      - name: LANGFLOW_UPDATE_STARTER_PROJECTS
        value: "false"
      - name: LANGFLOW_DATABASE_URL
        value: ""
    nodeSelector:
      cloud.google.com/gke-nodepool: langflow-pool
    tolerations: []
    affinity: {}
    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: 9090
      prometheus.io/path: "/metrics"

    securityContext:
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000
      allowPrivilegeEscalation: false
      runAsGroup: 1000

    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
      runAsGroup: 1000

    externalDatabase:
      # Compose in the SQLAlchemy format:
      # https://docs.sqlalchemy.org/en/20/core/engines.html#database-urls
      enabled: true
      driver: "postgresql"
      host: "aws-0-us-west-1.pooler.supabase.com"
      port: "5432"
      user: "postgres.pvjjdzqhllahjzgrshpw"
      password: ""
      database: "postgres"

    volumes:
      - name: flows
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      - name: data
        emptyDir: {}
      - name: db
        emptyDir: {}

    volumeMounts:
      - name: flows
        mountPath: /app/flows
        readOnly: false
      - name: tmp
        mountPath: /tmp
        readOnly: false
      - name: data
        mountPath: /app/data
        readOnly: false
      - name: db
        mountPath: /app/db
        readOnly: false

    sqlite:
      enabled: false

    # autoLogin: true|false
    # superuser: <superuser login>
    # superuserPassword: <superuser password>
    # secretKey: <encryption key, optional>
    # newUserIsActive: true|false

  frontend:
    enabled: true
    replicaCount: 1
    service:
      type: ClusterIP
      port: 8080
    image:
      repository: gcr.io/arno-377423/langflow-frontend
      imagePullPolicy: IfNotPresent
      tag: latest
    resources:
      requests:
        cpu: 0.3
        memory: 512Mi
      # limits:
      #   cpu: 0.3
      #   memory: 512Mi
    probe:
      failureThreshold: 3
      periodSeconds: 10
      timeoutSeconds: 5
      initialDelaySeconds: 5
    nodeSelector:
      cloud.google.com/gke-nodepool: langflow-pool
    tolerations: []
    affinity: {}
    podAnnotations: {}

    volumes:
      - name: tmp
        emptyDir: {}

    volumeMounts:
      - name: tmp
        mountPath: /tmp
        readOnly: false

secretProvider:
  enabled: false

postgresql:
  enabled: false
